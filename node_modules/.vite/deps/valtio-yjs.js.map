{
  "version": 3,
  "sources": ["../../fast-deep-equal/index.js", "../../valtio-yjs/src/index.ts", "../../valtio-yjs/src/parseProxyOps.ts"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "import { proxy, subscribe, getVersion } from 'valtio/vanilla';\nimport * as Y from 'yjs';\nimport deepEqual from 'fast-deep-equal';\nimport { parseProxyOps } from './parseProxyOps';\n\nconst isProxyObject = <T>(x: T): x is T & Record<string, unknown> =>\n  typeof x === 'object' && x !== null && getVersion(x) !== undefined;\n\nconst isProxyArray = <T>(x: T): x is T & unknown[] =>\n  Array.isArray(x) && getVersion(x) !== undefined;\n\nconst isPrimitiveMapValue = (v: unknown) =>\n  v === null ||\n  typeof v === 'string' ||\n  typeof v === 'number' ||\n  typeof v === 'boolean';\n\nconst isPrimitiveArrayValue = (v: unknown) =>\n  typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean';\n\ntype Options = {\n  transactionOrigin?: any;\n};\n\nconst transact = (doc: Y.Doc | null, opts: Options, fn: () => void) => {\n  if (doc) {\n    doc.transact(fn, opts.transactionOrigin);\n  } else {\n    fn();\n  }\n};\n\nexport const bindProxyAndYMap = <T>(\n  p: Record<string, T>,\n  y: Y.Map<T>,\n  opts: Options = {},\n) => {\n  const pv2yvCache = new WeakMap<object, unknown>();\n\n  const setPValueToY = (pv: T, k: string) => {\n    transact(y.doc, opts, () => {\n      if (\n        isProxyObject(pv) &&\n        pv2yvCache.has(pv) &&\n        pv2yvCache.get(pv) === y.get(k)\n      ) {\n        return;\n      }\n      if (isProxyArray(pv)) {\n        const yv = new Y.Array();\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n        y.set(k, yv as unknown as T);\n      } else if (isProxyObject(pv)) {\n        const yv = new Y.Map();\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n        y.set(k, yv as unknown as T);\n      } else if (isPrimitiveMapValue(pv)) {\n        y.set(k, pv);\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.warn('unsupported p type', pv);\n      }\n    });\n  };\n\n  const setYValueToP = (yv: T, k: string) => {\n    const prev = p[k];\n    if (isProxyObject(prev) && pv2yvCache.get(prev) === yv) {\n      return;\n    }\n    if (yv instanceof Y.Array) {\n      const pv = proxy([]);\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      p[k] = pv as unknown as T;\n    } else if (yv instanceof Y.Map) {\n      const pv = proxy(yv.toJSON());\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n      p[k] = pv as unknown as T;\n    } else if (isPrimitiveMapValue(yv)) {\n      p[k] = yv;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.warn('unsupported y type', yv);\n    }\n  };\n\n  // initialize from p\n  Object.entries(p).forEach(([k, pv]) => {\n    const yv = y.get(k);\n    if (\n      isProxyArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n    } else if (\n      !Array.isArray(pv) &&\n      isProxyObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n    } else {\n      setPValueToY(pv, k);\n    }\n  });\n\n  // initialize from y\n  y.forEach((yv, k) => {\n    const pv = p[k];\n    if (\n      isProxyArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n    } else if (\n      !Array.isArray(pv) &&\n      isProxyObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n    } else {\n      setYValueToP(yv, k);\n    }\n  });\n\n  // subscribe p\n  subscribe(p, (ops) => {\n    ops.forEach((op) => {\n      const path = op[1];\n      if (path.length !== 1) {\n        return;\n      }\n      const k = path[0] as string;\n      if (op[0] === 'delete') {\n        y.delete(k);\n      } else if (op[0] === 'set') {\n        const pv = p[k];\n        const yv = y.get(k);\n        if (!deepEqual(yv instanceof Y.AbstractType ? yv.toJSON() : yv, pv)) {\n          setPValueToY(pv, k);\n        }\n      }\n    });\n  });\n\n  // subscribe y\n  y.observe((event) => {\n    event.keysChanged.forEach((k) => {\n      const yv = y.get(k);\n      if (yv === undefined) {\n        delete p[k];\n      } else {\n        setYValueToP(yv, k);\n      }\n    });\n  });\n};\n\nexport const bindProxyAndYArray = <T>(\n  p: T[],\n  y: Y.Array<T>,\n  opts: Options = {},\n) => {\n  const pv2yvCache = new WeakMap<object, unknown>();\n\n  const insertPValueToY = (pv: T, i: number) => {\n    if (isProxyArray(pv)) {\n      const yv = new Y.Array();\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      y.insert(i, [yv as unknown as T]);\n    } else if (isProxyObject(pv)) {\n      const yv = new Y.Map();\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv, opts);\n      y.insert(i, [yv as unknown as T]);\n    } else if (isPrimitiveArrayValue(pv)) {\n      y.insert(i, [pv]);\n    } else {\n      throw new Error('unsupported p type');\n    }\n  };\n\n  const insertYValueToP = (yv: T, i: number) => {\n    if (yv instanceof Y.Array) {\n      const pv = proxy([]);\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYArray(pv, yv, opts);\n      p.splice(i, 0, pv as unknown as T);\n    } else if (yv instanceof Y.Map) {\n      const pv = proxy(yv.toJSON());\n      pv2yvCache.set(pv, yv);\n      bindProxyAndYMap(pv, yv);\n      p.splice(i, 0, pv as unknown as T);\n    } else if (isPrimitiveArrayValue(yv)) {\n      p.splice(i, 0, yv);\n    } else {\n      throw new Error('unsupported y type');\n    }\n  };\n\n  // initialize from p\n  p.forEach((pv, i) => {\n    const yv = y.get(i);\n    if (\n      isProxyArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n      }\n    } else if (\n      !Array.isArray(pv) &&\n      isProxyObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n      }\n    } else if (\n      isPrimitiveArrayValue(pv) &&\n      isPrimitiveArrayValue(yv) &&\n      pv === yv\n    ) {\n      // do nothing\n    } else {\n      insertPValueToY(pv, i);\n    }\n  });\n\n  // initialize from y\n  y.forEach((yv, i) => {\n    const pv = p[i];\n    if (\n      isProxyArray(pv) &&\n      yv instanceof Y.Array &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYArray(pv, yv, opts);\n      }\n    } else if (\n      !Array.isArray(pv) &&\n      isProxyObject(pv) &&\n      yv instanceof Y.Map &&\n      deepEqual(pv, yv.toJSON())\n    ) {\n      if (pv2yvCache.get(pv) !== yv) {\n        pv2yvCache.set(pv, yv);\n        bindProxyAndYMap(pv, yv, opts);\n      }\n    } else if (\n      isPrimitiveArrayValue(pv) &&\n      isPrimitiveArrayValue(yv) &&\n      pv === yv\n    ) {\n      // do nothing\n    } else {\n      insertYValueToP(yv, i);\n    }\n  });\n\n  // strip p\n  p.splice(y.length);\n\n  // subscribe p\n  subscribe(p, (ops) => {\n    const arrayOps = parseProxyOps(ops);\n    if (deepEqual(y.toJSON(), p)) {\n      return;\n    }\n    transact(y.doc, opts, () => {\n      arrayOps.forEach((op) => {\n        const i = op[1];\n        if (op[0] === 'delete') {\n          if (y.length > i) {\n            y.delete(i, 1);\n          }\n          return;\n        }\n        const pv = p[i];\n        if (pv === undefined) {\n          return;\n        }\n        if (op[0] === 'set') {\n          if (y.length > i) {\n            y.delete(i, 1);\n          }\n          insertPValueToY(pv, i);\n        } else if (op[0] === 'insert') {\n          insertPValueToY(pv, i);\n        }\n      });\n    });\n  });\n\n  // subscribe y\n  y.observe((event) => {\n    if (deepEqual(p, y.toJSON())) {\n      return;\n    }\n    let retain = 0;\n    event.changes.delta.forEach((item) => {\n      if (item.retain) {\n        retain += item.retain;\n      }\n      if (item.delete) {\n        p.splice(retain, item.delete);\n      }\n      if (item.insert) {\n        if (Array.isArray(item.insert)) {\n          item.insert.forEach((yv, i) => {\n            insertYValueToP(yv, retain + i);\n          });\n        } else {\n          insertYValueToP(item.insert as unknown as T, retain);\n        }\n        retain += item.insert.length;\n      }\n    });\n  });\n};\n", "import { subscribe } from 'valtio/vanilla';\n\ntype Op = Parameters<Parameters<typeof subscribe>[1]>[0][number];\ntype ArrayOp = [\n  op: 'insert' | 'set' | 'delete',\n  index: number,\n  value1: unknown,\n  value2: unknown,\n];\n\nexport const parseProxyOps = (ops: Op[]): ArrayOp[] => {\n  const arrayOps: ArrayOp[] = ops.flatMap((op) => {\n    if (op[0] === 'resolve' || op[0] === 'reject') return [];\n    if (op[1].length !== 1) return [];\n    const index = Number(op[1][0]);\n    if (!Number.isFinite(index)) return [];\n    return [[op[0], index, op[2], op[3]]];\n  });\n\n  const findCorrespondingInsert = (\n    startOpIndex: number,\n    startArrayIndex: number,\n  ) => {\n    let s = 0;\n    let noInsert: [startOpIndex: number, startArrayIndex: number] | null = null;\n    while (startOpIndex + s + 1 < arrayOps.length) {\n      if (\n        (arrayOps[startOpIndex + s + 1][0] === 'set' ||\n          arrayOps[startOpIndex + s + 1][0] === 'insert') &&\n        arrayOps[startOpIndex + s + 1][1] < startArrayIndex &&\n        arrayOps[startOpIndex + s + 1][3] === arrayOps[startOpIndex][2]\n      ) {\n        return s + 1;\n      }\n      if (\n        noInsert === null &&\n        (arrayOps[startOpIndex + s + 1][0] === 'set' ||\n          arrayOps[startOpIndex + s + 1][0] === 'insert') &&\n        arrayOps[startOpIndex + s + 1][1] === startArrayIndex - (s + 1) &&\n        arrayOps[startOpIndex + s + 1][3] === undefined\n      ) {\n        s += 1;\n      } else if (\n        noInsert === null &&\n        startOpIndex + s + 1 < arrayOps.length &&\n        arrayOps[startOpIndex + s + 1][0] === 'set' &&\n        arrayOps[startOpIndex + s + 1][3] !== undefined\n      ) {\n        noInsert = [startOpIndex + s + 1, arrayOps[startOpIndex + s + 1][1]];\n        s += 1;\n      } else if (\n        noInsert !== null &&\n        arrayOps[startOpIndex + s + 1][0] === 'set' &&\n        arrayOps[startOpIndex + s + 1][1] ===\n          noInsert[1] + (s + 1 - noInsert[0]) &&\n        arrayOps[startOpIndex + s + 1][3] !== undefined\n      ) {\n        s += 1;\n      } else {\n        return null;\n      }\n    }\n    return null;\n  };\n\n  const findContinuousDelete = (\n    startOpIndex: number,\n    startArrayIndex: number,\n  ) => {\n    let d = 0;\n    while (\n      startOpIndex + d + 1 < arrayOps.length &&\n      arrayOps[startOpIndex + d + 1][0] === 'delete' &&\n      arrayOps[startOpIndex + d + 1][1] === startArrayIndex - (d + 1)\n    ) {\n      d += 1;\n    }\n    return d;\n  };\n\n  let i = 0;\n  while (i < arrayOps.length) {\n    if (\n      (arrayOps[i][0] === 'set' || arrayOps[i][0] === 'insert') &&\n      arrayOps[i][3] === undefined\n    ) {\n      const startArrayIndex = arrayOps[i][1];\n      const s = findCorrespondingInsert(i, startArrayIndex);\n      if (s !== null) {\n        const newArrayOp: ArrayOp = [\n          'insert',\n          arrayOps[i + s][1],\n          arrayOps[i + s][2],\n          undefined,\n        ];\n        arrayOps.splice(i + s, 1, newArrayOp);\n        arrayOps.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    } else if (i > 0 && arrayOps[i][0] === 'delete') {\n      const startArrayIndex = arrayOps[i][1];\n      const d = findContinuousDelete(i, startArrayIndex);\n      if (\n        arrayOps[i - 1][0] === 'set' &&\n        arrayOps[i - 1][1] === startArrayIndex - (d + 1) &&\n        arrayOps[i - 1][2] === arrayOps[i][2]\n      ) {\n        const newArrayOp: ArrayOp = [\n          'delete',\n          startArrayIndex - (d + 1),\n          arrayOps[i - 1][3],\n          undefined,\n        ];\n        arrayOps.splice(i - 1, 2);\n        arrayOps.splice(i - 1 + d, 0, newArrayOp);\n        i -= 1;\n      } else {\n        i += 1;\n      }\n    } else {\n      i += 1;\n    }\n  }\n\n  return arrayOps;\n};\n"],
  "mappings": "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",
  "names": ["a", "i", "isProxyObject", "x", "getVersion", "isProxyArray", "Array", "isArray", "isPrimitiveMapValue", "v", "isPrimitiveArrayValue", "transact", "doc", "opts", "fn", "transactionOrigin", "bindProxyAndYMap", "p", "y", "pv2yvCache", "WeakMap", "setPValueToY", "pv", "k", "has", "get", "yv", "set", "bindProxyAndYArray", "Map", "console", "warn", "setYValueToP", "prev", "proxy", "toJSON", "Object", "entries", "forEach", "deepEqual", "subscribe", "ops", "op", "path", "length", "delete", "AbstractType", "observe", "event", "keysChanged", "insertPValueToY", "i", "insert", "Error", "insertYValueToP", "splice", "arrayOps", "flatMap", "index", "Number", "isFinite", "findCorrespondingInsert", "startOpIndex", "startArrayIndex", "s", "noInsert", "findContinuousDelete", "d", "newArrayOp", "undefined", "retain", "changes", "delta", "item"]
}
